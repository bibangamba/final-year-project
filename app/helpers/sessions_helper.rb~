module SessionsHelper

	def sign_in(user)
		cookies.permanent.signed[:remember_token] = [user.id, user.salt]
		current_user = user #might have to use self.current_user
		#[permanent=20.years.from_now(according to rails), signed=secure(tells browser not to show user id )]
	end
	
	def current_user
		@current_user ||= user_from_remember_token
	end
	
	def signed_in?
		!current_user.nil?
	end
	
	def sign_out
		cookies.delete(:remember_token)
		current_user = nil
	end
	

			#redirect users that try to access update & edit actions without signing in
		def deny_access
			store_location
			redirect_to signin_path, :notice => "Please sign in to access this page."
		end
		
		def redirect_back_or(default)
			redirect_to(session[:return_to] || default)
		end
		
		def current_user?(user)
			user == current_user
		end



	private
		
		def user_from_remember_token
			User.authenticate_with_salt(*remember_token)
		end

		def remember_token
			cookies.signed[:remember_token] || [nil, nil]
		end
		
		def store_location
			session[:return_to] = request.fullpath #request(is an object) gets the attempted url
		end
		
		def clear_return_to
			session[:return_to] = nil
		end

end
